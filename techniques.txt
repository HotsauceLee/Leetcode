Questions when giving arguments:

About program:
1. is the input small enough to fit in to ram?
2. what if multithreading?
3. when design data structure, think about trade off between operations.

About input:
1. List: NUll, empty, duplicates, sorted, 
2. Interger: null, 0, overflow
3. String: null, empty, number/alphabit/symbol, space

没思路时用数据走一遍就有头绪了

1. Backtracking
https://en.wikipedia.org/wiki/Backtracking

2. Boyer-Moore method - Find the ones standing out by canceling each other's vote
https://en.wikipedia.org/wiki/Boyer%E2%80%93Moore_majority_vote_algorithm
https://gregable.com/2013/10/majority-vote-algorithm-find-majority.html

3. Using array value as index
  When all values in the array is between range [0, len(array)], could use value as idx to solve problems.

4. BST find previous/next predcessor/successor

5. Slow and fast pointers

6. KMP substring index

7. Linked list use Speed(fast) = Speed(slow) * 2 could find mid point and find loops.

8. two passes: first pass select a candidate, second pass check if it is legit.

9. binary search either begin + 1< end or begin < end begin = mid + 1 could avoid infinite loop

10. When solving string problems and requires hashmap, could use a XX[256] array if all chars are ASCII

